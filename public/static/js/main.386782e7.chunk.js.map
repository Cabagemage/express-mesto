{"version":3,"sources":["components/Header.js","contexts/currentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/PopupImage.js","utils/Api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","currentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onClick","name","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","style","backgroundImage","avatar","about","map","key","Footer","PopupWithForm","isOpen","isClose","form","title","children","closeToOverlay","noValidate","id","EditProfilePopup","onUpdateUser","useState","updateUserName","updateAboutInfo","useEffect","minLength","maxLength","value","onChange","e","target","required","placeholder","preventDefault","PopupImage","apiProfile","baseUrl","headers","this","res","ok","json","Promise","reject","status","all","getInitialCards","getUserInformation","fetch","then","checkStatus","data","method","body","JSON","stringify","cardId","authorization","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","popupCloseName","ref","current","AddPlacePopup","onSubmit","nameRef","imageRef","App","setCurrentUser","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddImagePopupOpen","setAddImagePopupOpen","isChangeAvatarPopupOpen","setChangeAvatarPopupOpen","selectedCard","setSelectedCard","setCards","getAppinfo","initCards","info","catch","err","console","log","handleOverlayClose","currentTarget","closeAllPopups","Provider","changeLikeStatus","newCard","newCards","c","deleteThisCard","filter","user","setUserInfo","postNewCard","url","changeProfileAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.386782e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport logo from \"../images/logo.svg\";\r\nimport \"../App.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} className=\"header__logo\" alt=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nexport const currentUserContext = React.createContext({});\r\n","import React, { useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport { currentUserContext } from \"../contexts/currentUserContext\";\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(currentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = `grid-card__remove ${\r\n    isOwn ? \"grid-card__remove\" : \"grid-card__remove-none\"\r\n  }`;\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `grid-card__like-button ${\r\n    isLiked ? \"grid-card__like-button_like_active\" : \"grid-card__like-button\"\r\n  }`;\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n  return (\r\n    <div className=\"grid-card\">\r\n      <img\r\n        className=\"grid-card__photo\"\r\n        src={card.link}\r\n        alt=\"\"\r\n        onClick={handleClick}\r\n      />\r\n      <button\r\n        onClick={handleDeleteClick}\r\n        className={cardDeleteButtonClassName}\r\n      ></button>\r\n      <div className=\"grid-card__textbox\">\r\n        <h2 className=\"grid-card__title\">{card.name}</h2>\r\n        <div className=\"grid-card__like-section\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleLikeClick}\r\n            className={cardLikeButtonClassName}\r\n          ></button>\r\n          <p className=\"grid-card__like-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport Card from \"./Card\";\r\nimport { currentUserContext } from \"../contexts/currentUserContext\";\r\n\r\nfunction Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onCardClick,\r\n  onAddPlace,\r\n  onCardLike,\r\n  onCardDelete,\r\n  cards,\r\n}) {\r\n  const currentUser = useContext(currentUserContext);\r\n\r\n  //возвращение разметки. Переменные userName / userDescrpiption через устанавливают соответствующие данные\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"profile\">\r\n        <div className=\"profile__avatar\" onClick={onEditAvatar}>\r\n          <img\r\n            className=\"profile__image\"\r\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n            alt=\"\"\r\n          ></img>\r\n        </div>\r\n        <div className=\"profile__textbox\">\r\n          <div className=\"profile__info\">\r\n            {/* //прокидываю переменную userName для установки данных с сервера  */}\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onEditProfile}\r\n              className=\"profile__edit\"\r\n            ></button>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n            {/* //прокидываю переменную userDescription для установки данных с сервера  */}\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__add\"\r\n          onClick={onAddPlace}\r\n        ></button>\r\n      </div>\r\n\r\n      <section className=\"elements\">\r\n        {cards.map((card) => (\r\n          <Card\r\n            onCardLike={onCardLike}\r\n            onCardDelete={onCardDelete}\r\n            key={card._id}\r\n            card={card}\r\n            onCardClick={onCardClick}\r\n          />\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction PopupWithForm({\r\n  isOpen,\r\n  isClose,\r\n  name,\r\n  form,\r\n  title,\r\n  children,\r\n  closeToOverlay,\r\n}) {\r\n  return (\r\n    <div\r\n      className={`popup ${isOpen && \"popup_opened\"}   popup_function_${name}  `}\r\n      onClick={closeToOverlay}\r\n    >\r\n      <form noValidate className={`popup__form popup__form_function_${form}`}>\r\n        <div id=\"form\" className=\"popup__container\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={isClose}\r\n            className={`popup__close popup_close_${name}`}\r\n          ></button>\r\n          <h2 className=\"popup__edit\">{title}</h2>\r\n          {children}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { currentUserContext } from \"../contexts/currentUserContext\";\r\n\r\nexport default function EditProfilePopup({\r\n  isOpen,\r\n  isClose,\r\n  closeToOverlay,\r\n  onUpdateUser,\r\n}) {\r\n  const [name, updateUserName] = React.useState(\"\");\r\n  const [about, updateAboutInfo] = React.useState(\"\");\r\n\r\n  const currentUser = React.useContext(currentUserContext);\r\n\r\n  React.useEffect(() => {\r\n    updateUserName(currentUser.name);\r\n    updateAboutInfo(currentUser.about);\r\n  }, [currentUser.name, currentUser.about]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateUser({\r\n      name: name,\r\n      about: about,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit\"\r\n      form=\"edit\"\r\n      title=\"Редактировать профиль\"\r\n      isOpen={isOpen}\r\n      isClose={isClose}\r\n      closeToOverlay={closeToOverlay}\r\n      children={\r\n        <>\r\n          <div className=\"popup__inputs\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              minLength=\"2\"\r\n              maxLength=\"40\"\r\n              value={name || \"\"}\r\n              onChange={(e) => updateUserName(e.target.value)}\r\n              required\r\n              className=\"popup__input popup__input_type_name\"\r\n              placeholder=\"Имя\"\r\n            />\r\n            <span id=\"name-error\" className=\"popup__input_type_error\"></span>\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"about\"\r\n              minLength=\"2\"\r\n              maxLength=\"200\"\r\n              value={about || \"\"}\r\n              required\r\n              onChange={(e) => updateAboutInfo(e.target.value)}\r\n              className=\"popup__input popup__input_type_job\"\r\n              placeholder=\"Работа\"\r\n            />\r\n            <span id=\"about-error\" className=\"popup__input_type_error\"></span>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"popup__save popup__save_function_edit\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction PopupImage({ card, isClose, closeToOverlay }) {\r\n  return (\r\n    <div\r\n      className={`popup   popup_function_image ${card && \"popup_opened\"}  `}\r\n      onClick={closeToOverlay}\r\n    >\r\n      <div className=\"popup__container popup__container_function_image\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close popup__close_current_image\"\r\n          onClick={isClose}\r\n        ></button>\r\n        <img className=\"image\" src={card && card.link} alt=\"\" />\r\n        <h2 className=\"popup__container popup__container_content_name\">\r\n          {card && card.name}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupImage;\r\n","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this.baseUrl = baseUrl;\r\n        this.headers = headers;\r\n    }\r\n\r\n    checkStatus(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        else { return Promise.reject(`Ошибка: ${res.status}`) }\r\n    }\r\n\r\n    getAppinfo() {\r\n        return Promise.all([this.getInitialCards(), this.getUserInformation()])\r\n    }\r\n\r\n    // Получение массива карточек с сервера\r\n    getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(this.checkStatus)\r\n    }\r\n\r\n    // Метод для создания новой карточки \r\n    postNewCard(data) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link,\r\n            }),\r\n        })\r\n            .then(this.checkStatus)\r\n    };\r\n    // Метод для удаления карточки\r\n    deleteThisCard(cardId) {\r\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n            method: 'Delete',\r\n            headers: this.headers\r\n        })\r\n            .then(this.checkStatus)\r\n    }\r\n    // Метод для получения инфы профиля\r\n    getUserInformation() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers,\r\n        })\r\n            .then(this.checkStatus)\r\n    }\r\n    //Метод для изменения инфы профиля\r\n    setUserInfo(data) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n            })\r\n\r\n        }).then(this.checkStatus)\r\n\r\n    }\r\n    //Метод для изменения аватарки\r\n    changeProfileAvatar(data) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n\r\n        }).then(this.checkStatus)\r\n    }\r\n    // Лайкос\r\n\r\n    changeLikeStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n                method: 'PUT',\r\n                headers: this.headers\r\n            }).then(this.checkStatus)\r\n        } else if (!isLiked) {\r\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: this.headers\r\n            }).then(this.checkStatus)\r\n        }\r\n    }\r\n\r\n}\r\nexport const apiProfile = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n    headers: {\r\n        authorization: '60dbe103-3bf7-4b68-8dd7-d41370d9694c',\r\n        'Content-Type': 'application/json'\r\n    }\r\n\r\n});","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function EditAvatarPopup({\r\n  isOpen,\r\n  isClose,\r\n  closeToOverlay,\r\n  onUpdateAvatar,\r\n}) {\r\n  const avatarRef = React.useRef(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      form=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      popupCloseName=\"avatar\"\r\n      isOpen={isOpen}\r\n      isClose={isClose}\r\n      closeToOverlay={closeToOverlay}\r\n      children={\r\n        <>\r\n          <div className=\"popup__inputs\">\r\n            <input\r\n              type=\"url\"\r\n              ref={avatarRef}\r\n              name=\"Аватар\"\r\n              required\r\n              className=\"popup__input popup__input_type_link\"\r\n              placeholder=\"Ссылка\"\r\n            />\r\n            <span id=\"avatar-error\" className=\"popup__input_type_error\"></span>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            className=\"popup__save   popup__save_function_create\"\r\n          >\r\n            Обновить\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm'\r\n\r\nexport default function AddPlacePopup({ isOpen, isClose, closeToOverlay, onSubmit }) {\r\n\r\n    const nameRef = React.useRef('')\r\n    const imageRef = React.useRef('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit({ name: nameRef.current.value, link: imageRef.current.value });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"add\"\r\n            form=\"add\"\r\n            title='Новое место'\r\n            isOpen={isOpen}\r\n            isClose={isClose}\r\n            closeToOverlay={closeToOverlay}\r\n            children={\r\n                <>\r\n                    <div className=\"popup__inputs\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            ref={nameRef}\r\n                            required minLength=\"1\"\r\n                            maxLength=\"30\"\r\n                            className=\"popup__input popup__input_type_place\"\r\n                            placeholder=\"Место\" />\r\n                        <span\r\n                            id=\"place-error\"\r\n                            className=\"popup__input_type_error\"></span>\r\n                        <input\r\n                            type=\"url\"\r\n                            name=\"link\"\r\n                            ref={imageRef}\r\n                            required className=\"popup__input popup__input_type_link\"\r\n                            placeholder=\"Ссылка\" />\r\n\r\n                        <span\r\n                            id=\"link-error\"\r\n                            className=\"popup__input_type_error\"></span>\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        onClick={handleSubmit}\r\n                        className=\"popup__save   popup__save_function_create\">Создать</button>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport PopupImage from \"./PopupImage\";\nimport { apiProfile } from \"../utils/Api.js\";\nimport { currentUserContext } from \"../contexts/currentUserContext\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddImagePopupOpen, setAddImagePopupOpen] = useState(false);\n  const [isChangeAvatarPopupOpen, setChangeAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    apiProfile\n      .getAppinfo()\n      .then((res) => {\n        const [initCards, info] = res;\n        setCurrentUser(info);\n        setCards(initCards);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleOverlayClose = (e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    closeAllPopups();\n  };\n\n  const handleUpdateUser = (user) => {\n    apiProfile\n      .setUserInfo(user)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleUpdateAvatar = (url) => {\n    apiProfile\n      .changeProfileAvatar(url)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  };\n  // const handleEscClose = () => {\n  //   document.addEventListener('keyup', (e) => {\n  //     if (e.key === 'escape') closeAllPopups();\n  //    });\n  //  }\n\n  const handleAddPlaceSubmit = (name, link) => {\n    apiProfile\n      .postNewCard(name, link)\n      .then((data) => {\n        setCards([...cards, data]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleEditClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n  const handleAddClick = () => {\n    setAddImagePopupOpen(true);\n  };\n  const handleAvatarClick = () => {\n    setChangeAvatarPopupOpen(true);\n  };\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n  const closeAllPopups = () => {\n    setChangeAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddImagePopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    apiProfile\n      .changeLikeStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n  function handleCardDelete(card) {\n    apiProfile\n      .deleteThisCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) =>  c._id !== card._id)\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"page\">\n      <currentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          onEditProfile={handleEditClick}\n          onAddPlace={handleAddClick}\n          onEditAvatar={handleAvatarClick}\n          onCardClick={handleCardClick}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          isClose={closeAllPopups}\n          closeToOverlay={handleOverlayClose}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddImagePopupOpen}\n          isClose={closeAllPopups}\n          onSubmit={handleAddPlaceSubmit}\n          // onAddPlace={}\n          closeToOverlay={handleOverlayClose}\n        />\n        <EditAvatarPopup\n          isClose={closeAllPopups}\n          closeToOverlay={handleOverlayClose}\n          isOpen={isChangeAvatarPopupOpen}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <PopupImage\n          card={selectedCard}\n          isClose={closeAllPopups}\n          closeToOverlay={handleOverlayClose}\n        />\n        <Footer />\n      </currentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.94cbab21.svg\";"],"sourceRoot":""}